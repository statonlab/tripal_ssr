<?php

include drupal_get_path('module', 'tripal_ssr') . '/includes/tripal_ssr.fields.inc';

//
//tripal_insert_cv('nci', 'The NCI Thesaurus is an ontology-like vocabulary that includes broad coverage of the cancer domain, including cancer related diseases, findings and abnormalities; anatomy; agents, drugs and chemicals; genes and gene products and so on. In certain areas, like cancer diseases and combination chemotherapies, it provides the most granular and consistent terminology available. It combines terminology from numerous cancer research related domains, and provides a way to integrate or link these kinds of information together through semantic relationships.');
//

tripal_insert_cvterm([
    'id' => 'nci:short_tandem_repeat',
    'name' => 'short_tandem_repeat',
    'cv_name' => 'nci',
    'definition' => 'Area of repetitive DNA within the genome consisting of multiple, end-to-end copies of a short DNA sequence usually comprised of di-, tri-, or tetranucleotide repeat units.',
]);

/**
 * Implements hook_node_view().
 *
 * @param $node
 * @param $view_mode
 * @param null $langcode
 */
function tripal_ssr_node_view($node, $view_mode, $langcode = NULL) {
  switch ($node->type) {
    case 'chado_feature':
      if ($view_mode == 'full') {
        $node->content['tripal_feature_ssr'] = array(
          '#markup' => theme('tripal_feature_ssr', array('node' => $node)),
          '#tripal_toc_id' => 'predicted_ssr',
          '#tripal_toc_title' => 'Predicted SSR',
          '#weight' => -1,
        );
        $node->content['tripal_feature_properties'] = array(
          '#markup' => theme('tripal_feature_properties_no_ssr', array('node' => $node)),
          '#tripal_toc_id' => 'properties',
          '#tripal_toc_title' => 'Properties',
          '#weight' => 0,
        );
      }
    break;

    case 'chado_organism':
      if ($view_mode == 'full') {

        $sql = 'SELECT analysis_id FROM chado.feature_ssr_mview WHERE organism_id = :organism_id';

        $result = db_query($sql, array(':organism_id' => $node->organism->organism_id));

        if($result->rowCount() > 0) {
          $node->content['tripal_ssr_link'] = array(
            '#type' => 'link',
            '#href' => '',
            '#title' => '<a href="/ssr-features/' . $node->organism->genus . '/' . $node->organism->species . '">Predicted SSRs (transcriptomic)</a>',
            '#weight' => 10,
          );
        }
      }
    break;

    case 'chado_analysis_unigene':
      if ($view_mode == 'full') {
        
        $sql = 'SELECT genus, species FROM chado.feature_ssr_mview WHERE analysis_id = :analysis_id';

        $result = db_query($sql, array(':analysis_id' => $node->analysis->analysis_id));
        $result_obj = $result->fetchObject();

        if ($result->rowCount() > 0) {
          $node->content['tripal_ssr_link'] = array(
            '#type' => 'link',
            '#href' => '',
            '#title' => '<a href="/ssr-features/' . $result_obj->genus . '/' . $result_obj->species . '">Predicted SSRs (transcriptomic)</a>',
            '#weight' => 10,
          );
        }
      }
    break;

  }

  if ($view_mode == 'full') {
    $node->content['tripal_organism_ssr'] = array(
      '#markup' => theme('tripal_organism_ssr', array('node' => $node)),
      '#tripal_toc_id' => 'predicted_ssr_transcriptomic',
      '#tripal_toc_title' => 'Predicted SSRs (transcriptomic)',
      '#weight' => 0,
    );
  }
}

/**
 * Implements hook_theme().
 *
 * @param $existing
 * @param $type
 * @param $theme
 * @param $path
 * @return array
 */
function tripal_ssr_theme($existing, $type, $theme, $path) {

  $items = array(
    'tripal_feature_ssr' => array(
      'variables' => array('node' => NULL),
      'template' => 'tripal_feature_ssr',
      'path' => "$path/theme/templates",
    ),
    'tripal_feature_properties_no_ssr' => array(
      'variables' => array('node' => NULL),
      'template' => 'tripal_feature_properties_no_ssr',
      'path' => "$path/theme/templates",
    ), 
  );
  return $items;
}






























