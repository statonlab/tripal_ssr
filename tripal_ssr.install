<?php

function tripal_ssr_install() {
  tripal_ssr_install_local_terms();
}

/**
 * Inserts local cvterms.
 */
function tripal_ssr_install_local_terms() {


  tripal_insert_cvterm([
    'name' => 'associated_with',
    'def' => '.',
    'accession' => 'associated_with',
    'cv_name' => 'sequence',
    'db_name' => 'SO',
  ]);


  tripal_insert_cvterm([
    'name' => 'tripal_ssr_motif',
    'def' => 'An SSR motif.',
    'cv_name' => 'feature_property',
    'db_name' => 'tripal',
  ]);

  tripal_insert_cvterm([
    'name' => 'tripal_ssr_repeats',
    'def' => 'The number of repeats in an SSR.',
    'cv_name' => 'feature_property',
    'db_name' => 'tripal',
  ]);

  tripal_insert_cvterm([
    'name' => 'tripal_ssr_start',
    'def' => 'The start of an SSR.',
    'cv_name' => 'feature_property',
    'db_name' => 'tripal',
  ]);

  tripal_insert_cvterm([
    'name' => 'tripal_ssr_end',
    'def' => 'The end of an SSR.',
    'cv_name' => 'feature_property',
    'db_name' => 'tripal',
  ]);

  tripal_insert_cvterm([
    'name' => 'tripal_ssr_forward_primer',
    'def' => 'The forward primer of an SSR.',
    'cv_name' => 'feature_property',
    'db_name' => 'tripal',
  ]);

  tripal_insert_cvterm([
    'name' => 'tripal_ssr_reverse_primer',
    'def' => 'The reverse primer of an SSR.',
    'cv_name' => 'feature_property',
    'db_name' => 'tripal',
  ]);

  tripal_insert_cvterm([
    'name' => 'tripal_ssr_forward_tm',
    'def' => 'The forward melting temperature.',
    'cv_name' => 'feature_property',
    'db_name' => 'tripal',
  ]);

  tripal_insert_cvterm([
    'name' => 'tripal_ssr_reverse_tm',
    'def' => 'The reverse melting temperature.',
    'cv_name' => 'feature_property',
    'db_name' => 'tripal',
  ]);

  tripal_insert_cvterm([
    'name' => 'tripal_ssr_product_size',
    'def' => 'The product size of an SSR.',
    'cv_name' => 'feature_property',
    'db_name' => 'tripal',
  ]);


  tripal_insert_cvterm([
    'name' => 'tripal_associated_ssr',
    'def' => 'This feature has predicted or confirmed SSRs associated with it.',
    'cv_name' => 'feature_property',
    'db_name' => 'tripal',
  ]);
}



function tripal_ssr_update_7200() {
  $mview = chado_get_mview_id('feature_ssr_mview');
  if ($mview) {
    chado_delete_mview($mview);
  }
}

/**
 * Add associated ssrs cvterm
 */
function tripal_ssr_update_7201() {
  tripal_insert_cvterm([
    'name' => 'tripal_associated_ssr',
    'def' => 'This feature has predicted or confirmed SSRs associated with it.',
    'cv_name' => 'feature_property',
    'db_name' => 'tripal',
  ]);
}
function tripal_ssr_update_7202(){
  tripal_insert_cvterm([
    'name' => 'associated_with',
    'def' => '.',
    'accession' => 'associated_with',
    'cv_name' => 'sequence',
    'db_name' => 'SO',
  ]);
}

function tripal_ssr_uninstall() {
  // Remove materialized views
  $mview = chado_get_mview_id('feature_ssr_mview');
  if ($mview) {
    chado_delete_mview($mview);
  }
}